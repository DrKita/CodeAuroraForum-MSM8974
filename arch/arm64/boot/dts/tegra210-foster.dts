/dts-v1/;

#include "tegra210.dtsi"
#include "tegra210-foster-pinctrl.dtsi"
#include "dt-bindings/gpio/tegra-gpio.h"
#include "dt-bindings/pinctrl/pinctrl-tegra.h"
#include "dt-bindings/thermal/thermal.h"
#include "dt-bindings/input/input.h"

/ {
	model = "NVIDIA Tegra210 Foster";
	compatible = "nvidia,foster", "nvidia,tegra210";

	memory {
		device_type = "memory";
		reg = < 0x0 0x80000000 0x0 0x80000000 >;
	};

	gpio: gpio@6000d000 {
		gpio-init-names = "default";
		gpio-init-0 = <&gpio_default>;
		gpio-init-1 = <&wlan_default>;

		gpio_default: default {
			gpio-input = <
				TEGRA_GPIO(BB, 4)
				TEGRA_GPIO(E, 6)
				TEGRA_GPIO(A, 5)
				TEGRA_GPIO(X, 3)
				TEGRA_GPIO(X, 4)
				TEGRA_GPIO(X, 2)
				TEGRA_GPIO(X, 1)
				TEGRA_GPIO(X, 0)
				TEGRA_GPIO(X, 5)
				TEGRA_GPIO(X, 6)
				TEGRA_GPIO(X, 7)
				TEGRA_GPIO(Y, 0)
				TEGRA_GPIO(Y, 1)
				TEGRA_GPIO(V, 3)
				TEGRA_GPIO(Z, 0)
				TEGRA_GPIO(G, 0)
				TEGRA_GPIO(K, 0)
				TEGRA_GPIO(K, 4)
				TEGRA_GPIO(K, 6)
				TEGRA_GPIO(H, 2)
				TEGRA_GPIO(H, 5)
				TEGRA_GPIO(I, 1)
				TEGRA_GPIO(CC, 6)
				TEGRA_GPIO(CC, 1)
				>;
			gpio-output-low = <
				TEGRA_GPIO(BB, 2)
				TEGRA_GPIO(BB, 3)
				TEGRA_GPIO(DD, 0)
				TEGRA_GPIO(E, 4)
				TEGRA_GPIO(E, 5)
				TEGRA_GPIO(S, 4)
				TEGRA_GPIO(S, 5)
				TEGRA_GPIO(S, 6)
				TEGRA_GPIO(S, 7)
				TEGRA_GPIO(T, 0)
				TEGRA_GPIO(T, 1)
				TEGRA_GPIO(V, 6)
				TEGRA_GPIO(V, 1)
				TEGRA_GPIO(V, 2)
				TEGRA_GPIO(V, 5)
				TEGRA_GPIO(Z, 4)
				TEGRA_GPIO(G, 2)
				TEGRA_GPIO(G, 3)
				TEGRA_GPIO(K, 1)
				TEGRA_GPIO(K, 2)
				TEGRA_GPIO(K, 3)
				TEGRA_GPIO(K, 5)
				TEGRA_GPIO(K, 7)
				TEGRA_GPIO(L, 0)
				TEGRA_GPIO(H, 0)
				TEGRA_GPIO(H, 3)
				TEGRA_GPIO(H, 4)
				TEGRA_GPIO(H, 6)
				TEGRA_GPIO(H, 7)
				TEGRA_GPIO(I, 0)
				TEGRA_GPIO(I, 2)
				TEGRA_GPIO(I, 3)
				TEGRA_GPIO(CC, 7)
				TEGRA_GPIO(CC, 5)
				>;
			gpio-output-high = <
				TEGRA_GPIO(E, 7)
				>;
		};

		wlan_default: wlan-default {
			gpio-input = <
				TEGRA_GPIO(H, 2)
				TEGRA_GPIO(I, 1)
				>;
			gpio-output-high = <
				TEGRA_GPIO(H, 0)
				TEGRA_GPIO(I, 0)
				>;
		};
	};

	efuse@7000f800 {
		status = "okay";
	};

	sdhci@700b0600 { /* SDMMC4 for EMMC on loki */
		bus-width = <8>;
		non-removable;
		status = "okay";
	};

	gpio-keys {
		compatible = "gpio-keys";
		gpio-keys,name = "gpio-keys";

		power {
			label = "Power";
			gpios = <&gpio TEGRA_GPIO(X, 5) GPIO_ACTIVE_LOW>;
			linux,code = <KEY_POWER>;
			gpio-key,wakeup;
		};

		sw_lid {
			label = "SW LID";
			gpios = <&gpio TEGRA_GPIO(B, 4) GPIO_ACTIVE_LOW>;
			linux,code = <0>; /* SW_LID */
			linux,input-type = <5>; /* EV_SW */
			gpio-key,wakeup;
			debounce-interval = <300>;
		};
	};

	adma@702e2000  {
		interrupts = <0 24 0x04
			      0 25 0x04
			      0 26 0x04
			      0 27 0x04
			      0 28 0x04
			      0 29 0x04
			      0 30 0x04
			      0 31 0x04
			      0 32 0x04
			      0 33 0x04>;
		dma-channels = <10>;
		status = "okay";
	};

	serial@70006000 {
		status = "okay";
	};
};
