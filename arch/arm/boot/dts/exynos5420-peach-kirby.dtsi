/*
 * Common device tree include for all Peach Pit board revisions
 *
 * Copyright (c) 2013 Google, Inc
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

/ {
	aliases {
		i2c20 = &i2c_20;
	};

	chosen {
		bootargs = "";
	};

	firmware {
		chromeos {
			write-protect-gpio = <&gpx3 0 1>;

			pinctrl-names = "default";
			pinctrl-0 = <&wp_gpio>;

			nonvolatile-context-storage = "mkbp";
			chromeos-vbc-ec = <&ec>;
		};
	};

	fixed-rate-clocks {
		xxti {
			compatible = "samsung,clock-xxti";
			clock-frequency = <24000000>;
		};
	};

	pinctrl@13400000 {
		dp_hpd: dp-hpd {
			samsung,pins = "gpx2-6";
			samsung,pin-function = <0>;
			samsung,pin-pud = <3>;
			samsung,pin-drv = <0>;
		};

		ec_irq: ec-irq {
			samsung,pins = "gpx1-5";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		hp_det_gpio: hp-det-gpio {
			samsung,pins = "gpx2-1";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		hsic_reset: hsic-reset {
			samsung,pins = "gpx2-4";
			samsung,pin-function = <1>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		lid_irq: lid-irq {
			samsung,pins = "gpx3-4";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		max77802_irq: max77802-irq {
			samsung,pins = "gpx3-1";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		max98090_irq: max98090-irq {
			samsung,pins = "gpx0-2";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		mic_det_gpio: mic-det-gpio {
			samsung,pins = "gpx1-7";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		power_key_irq: power-key-irq {
			samsung,pins = "gpx1-2";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		ps8622_reset: ps8622-reset {
			samsung,pins = "gpy7-7";
			samsung,pin-function = <1>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		ps8622_sleep: ps8622-sleep {
			samsung,pins = "gpx3-5";
			samsung,pin-function = <1>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		tpm_irq: tpm-irq {
			samsung,pins = "gpx1-0";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		bq24192_irq: bq24192-irq {
			samsung,pins = "gpx2-5";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		trackpad_irq: trackpad-irq {
			samsung,pins = "gpx1-1";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		wifi_en: wifi-en {
			samsung,pins = "gpx0-0";
			samsung,pin-function = <1>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		wifi_rst: wifi-rst {
			samsung,pins = "gpx0-1";
			samsung,pin-function = <1>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		wp_gpio: wp-gpio {
			samsung,pins = "gpx3-0";
			samsung,pin-function = <0>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};
	};

	pinctrl@13410000 {
		/* Adjust WiFi drive strengths lower for EMI */
		sd1_clk: sd1-clk {
			samsung,pin-drv = <0>;
		};
		sd1_cmd: sd1-cmd {
			samsung,pin-drv = <0>;
		};
		sd1_bus4: sd1-bus-width4 {
			samsung,pin-drv = <0>;
		};
		sd1_bus8: sd1-bus-width8 {
			samsung,pin-drv = <0>;
		};

		mask_tpm_reset: mask-tpm-reset {
			samsung,pins = "gpy0-0";
			samsung,pin-function = <1>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};
	};

	pinctrl@14010000 {
		ec_spi_cs: ec-spi-cs {
			samsung,pins = "gpb1-2";
			samsung,pin-function = <1>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <3>;
		};

		spi_flash_cs: spi-flash-cs {
			samsung,pins = "gpa2-5";
			samsung,pin-function = <1>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <3>;
		};

		usb3_vbus0_en: usb30vbus0-en {
			samsung,pins = "gph0-0";
			samsung,pin-function = <1>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		usb3_vbus1_en: usb30vbus1-en {
			samsung,pins = "gph0-5";
			samsung,pin-function = <1>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};

		backlight_pwm: backlight-pwm {
			samsung,pins = "gpb2-0";
			samsung,pin-function = <2>;
			samsung,pin-pud = <0>;
			samsung,pin-drv = <0>;
		};
	};

	gpio-keys {
		compatible = "gpio-keys";

		pinctrl-names = "default";
		pinctrl-0 = <&power_key_irq &lid_irq>;

		power {
			label = "Power";
			gpios = <&gpx1 2 1>;
			linux,code = <116>; /* KEY_POWER */
			gpio-key,wakeup;
		};

		lid-switch {
			label = "Lid";
			gpios = <&gpx3 4 1>;
			linux,input-type = <5>; /* EV_SW */
			linux,code = <0>; /* SW_LID */
			debounce-interval = <1>;
			gpio-key,wakeup;
		};
	};

	ramoops {
		compatible = "ramoops";
		reg = <0x41f00000 0x00100000>;
		record-size = <0x00020000>;
		dump-oops;
	};

	watchdog {
		status = "okay";
	};

	rtc {
		status = "okay";
	};

	/* TODO: Should only enable UART3? */
	serial@12C00000 {
		status = "okay";
	};

	serial@12C10000 {
		status = "okay";
	};

	serial@12C20000 {
		status = "okay";
	};

	serial@12C30000 {
		status = "okay";
	};

	dwmmc0@12200000 {
		status = "okay";
		num-slots = <1>;
		broken-cd;
		bypass-smu;
		supports-highspeed;	/* >= 25MHz */
		supports-hs200-mode;	/* 200MHz */
		non-removable;
		fifo-depth = <0x40>;
		card-detect-delay = <200>;
		samsung,dw-mshc-ciu-div = <3>;
		samsung,dw-mshc-sdr-timing = <0 4>;
		samsung,dw-mshc-ddr-timing = <0 2>;
		pinctrl-names = "default";
		pinctrl-0 = <&sd0_clk &sd0_cmd &sd0_bus4 &sd0_bus8>;
		slot@0 {
			reg = <0>;
			bus-width = <8>;
		};
	};

	dwmmc1@12210000 {
		/*
		 * The current best way to ensure that reset/enable and clocks
		 * are available before we try to probe the WiFi card is through
		 * a chain of regulators.
		 */
		vmmc-supply = <&wifi_en_regulator>;

		status = "okay";
		num-slots = <1>;
		supports-highspeed;
		keep-power-in-suspend;
		/* not-removable NOT set so mwifiex driver can use reset trick */
		broken-cd;
		bypass-smu;
		fifo-depth = <0x40>;
		card-detect-delay = <200>;
		clock-frequency = <400000000>;
		samsung,dw-mshc-ciu-div = <3>;
		samsung,dw-mshc-sdr-timing = <4 4>;
		samsung,dw-mshc-ddr-timing = <0 2>;
		pinctrl-names = "default";
		pinctrl-0 = <&sd1_clk &sd1_cmd &sd1_int &sd1_bus4 &sd1_bus8>;
		slot@0 {
			reg = <0>;
			bus-width = <4>;
		};
	};

	/* TODO: Add fimd, display port, etc */

	spi_1: spi@12d30000 {
		status = "okay";
		samsung,spi-src-clk = <0>;
		num-cs = <1>;

		spidev@0 {
			compatible = "spidev";
			reg = <0>;
			spi-max-frequency = <50000000>;
			pinctrl-names = "default";
			pinctrl-0 = <&spi_flash_cs>;

			controller-data {
				cs-gpio = <&gpa2 5 0>;
				samsung,spi-feedback-delay = <2>;
			};
		};
	};

	/* spi_2 */
	spi@12d40000 {
		status = "okay";
		samsung,spi-src-clk = <0>;
		num-cs = <1>;
		ec: cros-ec@0 {
			compatible = "google,cros-ec-spi";

			/* TODO: Run faster than 1MHz */
			spi-max-frequency = <1000000>;

			pinctrl-names = "default";
			pinctrl-0 = <&ec_spi_cs &ec_irq>;

			reg = <0>;
			interrupts = <5 0>;
			interrupt-parent = <&gpx1>;

			controller-data {
				cs-gpio = <&gpb1 2 0>;

				/* TODO: feedback delay should be 2?*/
				samsung,spi-feedback-delay = <0>;
			};

			/* Arbitrarily assign bus 20 since past exynos range */
			i2c_20: i2c-tunnel {
				compatible = "google,cros-ec-i2c-tunnel";
				#address-cells = <1>;
				#size-cells = <0>;

				google,remote-bus = <0>;
			};

			keyboard-controller {
				compatible = "google,cros-ec-keyb";
				keypad,num-rows = <8>;
				keypad,num-columns = <13>;
				google,needs-ghost-filter;
				linux,keymap = <0x0001007d	/* L_META */
						0x0002003b	/* F1 */
						0x00030030	/* B */
						0x00040044	/* F10 */
						0x00060031	/* N */
						0x0008000d	/* = */
						0x000a0064	/* R_ALT */

						0x01010001	/* ESC */
						0x0102003e	/* F4 */
						0x01030022	/* G */
						0x01040041	/* F7 */
						0x01060023	/* H */
						0x01080028	/* ' */
						0x01090043	/* F9 */
						0x010b000e	/* BKSPACE */

						0x0200001d	/* L_CTRL */
						0x0201000f	/* TAB */
						0x0202003d	/* F3 */
						0x02030014	/* T */
						0x02040040	/* F6 */
						0x0205001b	/* ] */
						0x02060015	/* Y */
						0x02070056	/* 102ND */
						0x0208001a	/* [ */
						0x02090042	/* F8 */

						0x03010029	/* GRAVE */
						0x0302003c	/* F2 */
						0x03030006	/* 5 */
						0x0304003f	/* F5 */
						0x03060007	/* 6 */
						0x0308000c	/* - */
						0x030b002b	/* \ */

						0x04000061	/* R_CTRL */
						0x0401001e	/* A */
						0x04020020	/* D */
						0x04030021	/* F */
						0x0404001f	/* S */
						0x04050025	/* K */
						0x04060024	/* J */
						0x04080027	/* ; */
						0x04090026	/* L */
						0x040b001c	/* ENTER */

						0x0501002c	/* Z */
						0x0502002e	/* C */
						0x0503002f	/* V */
						0x0504002d	/* X */
						0x05050033	/* , */
						0x05060032	/* M */
						0x0507002a	/* L_SHIFT */
						0x05080035	/* / */
						0x05090034	/* . */
						0x050B0039	/* SPACE */

						0x06010002	/* 1 */
						0x06020004	/* 3 */
						0x06030005	/* 4 */
						0x06040003	/* 2 */
						0x06050009	/* 8 */
						0x06060008	/* 7 */
						0x0608000b	/* 0 */
						0x0609000a	/* 9 */
						0x060a0038	/* L_ALT */
						0x060b006c	/* DOWN */
						0x060c006a	/* RIGHT */

						0x07010010	/* Q */
						0x07020012	/* E */
						0x07030013	/* R */
						0x07040011	/* W */
						0x07050017	/* I */
						0x07060016	/* U */
						0x07070036	/* R_SHIFT */
						0x07080019	/* P */
						0x07090018	/* O */
						0x070b0067	/* UP */
						0x070c0069>;	/* LEFT */
			};
		};
	};

	/* i2s_0 */
	i2s@03830000 {
		status = "okay";
	};

	/* dw usb3_0 */
	usb@12000000 {
		status = "okay";
		samsung,vbus-gpio = <&gph0 0 0>;
		pinctrl-names = "default";
		pinctrl-0 = <&usb3_vbus0_en>;
	};

	/* ehci */
	usb@12110000 {
		status = "okay";
	};

	/* ohci */
	usb@12120000 {
		status = "okay";
	};

	/* dw usb3_1 */
	usb@12400000 {
		status = "okay";
		samsung,vbus-gpio = <&gph0 5 0>;
		pinctrl-names = "default";
		pinctrl-0 = <&usb3_vbus1_en>;
	};

	usb3_phy0: usbphy@12100000 {
		samsung,txpreempamptune = <0x1>;
	};

	usb3_phy1: usbphy@12500000 {
		samsung,txpreempamptune = <0x1>;
	};

	/* i2c2 */
	i2c@12C80000 {
		status = "okay";
		samsung,i2c-sda-delay = <100>;
		samsung,i2c-max-bus-freq = <66000>;

		hdmihdcp@3a {
			compatible = "samsung,exynos4210-hdmihdcp";
			reg = <0x3a>;
		};

		hdmiddc@50 {
			compatible = "samsung,exynos4210-hdmiddc";
			reg = <0x50>;
		};
	};

	/* hsi2c7 */
	hsi2c@12CD0000 {
		status = "okay";
		clock-frequency = <400000>;

		max98090: codec@10 {
			compatible = "maxim,max98090";
			reg = <0x10>;
			interrupts = <2 0>;
			interrupt-parent = <&gpx0>;
			mic-left-digital;
			mic-right-digital;
			mclk-pin = <2>;
			pinctrl-names = "default";
			pinctrl-0 = <&max98090_irq>;
		};
	};

	/* hsi2c8 */
	hsi2c@12E00000 {
		status = "okay";
		clock-frequency = <333000>;

		/*
		 * TODO: for now config the IRQ at the i2c level since
		 * pinctrl can't handle sharing it between two children, even
		 * if one fails to probe.
		 * See crosbug.com/p/20329
		 */
		pinctrl-names = "default";
		pinctrl-0 = <&i2c8_hs_bus &trackpad_irq>;

		/* Only one of the following trackpads should be probed */
		trackpad@4b {
			reg = <0x4b>;
			compatible = "atmel,atmel_mxt_tp";
			interrupts = <1 0>;
			interrupt-parent = <&gpx1>;
			wakeup-source;
		};
	};

	/* hsi2c9 */
	hsi2c@12E10000 {
		status = "okay";
		clock-frequency = <400000>;

		tpm@20 {
			/* Unused irq; but still need to configure the pins */
			pinctrl-names = "default";
			pinctrl-0 = <&tpm_irq>;

			compatible = "infineon,slb9645tt";
			reg = <0x20>;
		};
	};

	sound {
		compatible = "google,daisy-audio-max98090";
		samsung,i2s-controller = <&i2s_0>;
		samsung,audio-codec = <&max98090>;
		samsung,mic-det-gpios = <&gpx1 7 1>;
		samsung,hp-det-gpios = <&gpx2 1 0>;
		clocks = <&clock 3>, <&clock 4>, <&clock 1025>,
			<&clock 148>, <&clock_audss EXYNOS_MOUT_AUDSS>,
			<&clock_audss EXYNOS_MOUT_I2S>;
		clock-names = "fout_epll", "sclk_epll", "mout_audio0",
			"sclk_audio0", "mout_audss", "mout_i2s";
		pinctrl-names = "default";
		pinctrl-0 = <&mic_det_gpio &hp_det_gpio>;
	};

	/* We need GPY0_0 to be low at sleep time; just keep it low always */
	mask_tpm_reset_regulator: mask-tpm-reset-regulator {
		compatible = "regulator-fixed";
		regulator-name = "mask-tpm-reset";
		gpio = <&gpy0 0 0>;
		enable-active-low;
		regulator-boot-on;
		regulator-always-on;
		pinctrl-names = "default";
		pinctrl-0 = <&mask_tpm_reset>;
	};

	/* Chain regulators to ensure proper Wifi turn on sequence */
	wifi_rst_regulator: wifi-rst-regulator {
		compatible = "regulator-fixed";
		regulator-name = "wifi-rst-l";
		gpio = <&gpx0 1 0>;
		enable-active-high;
		startup-delay-us = <1500>;
		pinctrl-names = "default";
		pinctrl-0 = <&wifi_rst>;

		/*
		 * Technically we should have a vin-supply of the 32k clock.
		 * ...but that causes a deferred probe of this regulator
		 * despite the fact that we don't need to enable it until
		 * much later.  Skip the dependency since we know that the
		 * 32k clock will always be kept on from early boot.
		 *
		 * vin-supply = <&en32khz_cp>;
		 */
	};

	wifi_en_regulator: wifi-en-regulator {
		compatible = "regulator-fixed";
		regulator-name = "wifi-en";
		gpio = <&gpx0 0 0>;
		enable-active-high;
		pinctrl-names = "default";
		pinctrl-0 = <&wifi_en>;
		vin-supply = <&wifi_rst_regulator>;
	};

	vbat: fixed-regulator {
		compatible = "regulator-fixed";
		regulator-name = "vbat-supply";
		regulator-boot-on;
		regulator-always-on;
	};

	backlight {
		compatible = "pwm-backlight";
		pwms = <&pwm 0 1000000 0>;
		max-brightness = <2800>;
		default-brightness-level = <2800>;
		pinctrl-0 = <&backlight_pwm>;
		pinctrl-names = "default";
	};

	pinctrl@13400000 {
		gpy7: gpy7 {
			powerdown-settings = <3 3 3 3 3 3 6 2>;
		};
	};
	pinctrl@13410000 {
		gpc0: gpc0 {
			powerdown-settings = <6 3 5 3 3 3 3 3>;
		};
		gpc1: gpc1 {
			powerdown-settings = <6 2 3 2 2 2 2 3>;
		};
		gpc2: gpc2 {
			powerdown-settings = <6 2 2 2 2 2 2>;
		};
		gpc3: gpc3 {
			powerdown-settings = <3 3 3 3>;
		};
		gpc4: gpc4 {
			powerdown-settings = <2 3>;
		};
		gpd1: gpd1 {
			powerdown-settings = <2 6 6 6 2 2 2 2>;
		};
		gpy0: gpy0 {
			powerdown-settings = <3 2 2 2 2 2>;
		};
		gpy1: gpy1 {
			powerdown-settings = <2 2 2 2>;
		};
		gpy2: gpy2 {
			powerdown-settings = <2 2 2 2 2 2>;
		};
		gpy3: gpy3 {
			powerdown-settings = <3 3 3 3 3 3 3 3>;
		};
		gpy4: gpy4 {
			powerdown-settings = <3 3 3 3 3 3 3 3>;
		};
		gpy5: gpy5 {
			powerdown-settings = <3 3 3 3 3 3 3 3>;
		};
		gpy6: gpy6 {
			powerdown-settings = <3 3 3 3 3 3 3 3>;
		};
	};
	pinctrl@14000000 {
		gpe0: gpe0 {
			powerdown-settings = <3 3 3 3 3 3 3 3>;
		};
		gpe1: gpe1 {
			powerdown-settings = <3 3>;
		};
		gpf0: gpf0 {
			powerdown-settings = <3 3 3 3 3 3>;
		};
		gpf1: gpf1 {
			powerdown-settings = <3 3 3 3 3 3 3 3>;
		};
		gpg0: gpg0 {
			powerdown-settings = <3 3 3 3 3 3 3 3>;
		};
		gpg1: gpg1 {
			powerdown-settings = <3 3 3 3 3 3 3 3>;
		};
		gpg2: gpg2 {
			powerdown-settings = <3 1>;
		};
		gpj4: gpj4 {
			powerdown-settings = <3 3 6 6>;
		};
	};
	pinctrl@14010000 {
		gpa0: gpa0 {
			powerdown-settings = <3 3 3 3 3 3 2 2>;
		};
		gpa1: gpa1 {
			powerdown-settings = <3 3 3 3 3 3>;
		};
		gpa2: gpa2 {
			powerdown-settings = <2 2 3 3 6 6 1 6>;
		};
		gpb0: gpb0 {
			powerdown-settings = <3 3 3 3 3>;
		};
		gpb1: gpb1 {
			powerdown-settings = <3 6 6 1 6>;
		};
		gpb2: gpb2 {
			powerdown-settings = <3 3 2 2>;
		};
		gpb3: gpb3 {
			powerdown-settings = <3 3 3 3 2 2 2 2>;
		};
		gpb4: gpb4 {
			powerdown-settings = <2 2>;
		};
		gph0: gph0 {
			powerdown-settings = <6 6 6 6 6 6 6 5>;
		};
	};
	pinctrl@03860000 {
		gpz: gpz {
			powerdown-settings = <6 3 6 3 1 3 3>;
		};
	};
};
